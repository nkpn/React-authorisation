{"version":3,"sources":["components/Container/Container.js","service/useForm.js","components/ButtonsGender/images/male.svg","components/ButtonsGender/images/female.svg","components/ButtonsGender/images/other.svg","service/validation.js","components/SingUp/images/male.svg","components/SingUp/images/female.svg","components/SingUp/images/other.svg","components/SingUp/SignUp.js","images/logo.svg","components/SuccessForm/SuccessForm.js","components/Form/Form.js","components/App.js","index.js"],"names":["Container","children","className","useForm","callback","validate","useState","gender","email","password1","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","target","name","value","console","log","handleSubmit","e","preventDefault","validateInfo","test","SignUp","submitForm","noValidate","onSubmit","style","borderColor","src","maleImage","alt","type","onChange","femaleImage","otherImage","required","placeholder","href","SuccessForm","Form","isSubmitted","setIsSubmitted","logo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bdde7e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState, useEffect } from 'react';\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    gender: '',\r\n    email: '',\r\n    password1: '',\r\n    password2: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    console.log(values);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  return { handleChange, handleSubmit, errors, values };\r\n};\r\n\r\nexport default useForm;\r\n","export default __webpack_public_path__ + \"static/media/male.7c87b710.svg\";","export default __webpack_public_path__ + \"static/media/female.9b743cb2.svg\";","export default __webpack_public_path__ + \"static/media/other.a4b58253.svg\";","export default function validateInfo(values) {\r\n  let errors = {};\r\n\r\n  if (!values.gender) {\r\n    errors.gender = 'Gender required';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Email required';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Email address is invalid';\r\n  }\r\n  if (!values.password1) {\r\n    errors.password1 = 'Password is required';\r\n  } else if (values.password1.length < 6) {\r\n    errors.password1 = 'Password needs to be 6 characters or more';\r\n  }\r\n\r\n  if (!values.password2) {\r\n    errors.password2 = 'Password is required';\r\n  } else if (values.password2 !== values.password1) {\r\n    errors.password2 = 'Passwords do not match';\r\n  }\r\n  return errors;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/male.7c87b710.svg\";","export default __webpack_public_path__ + \"static/media/female.9b743cb2.svg\";","export default __webpack_public_path__ + \"static/media/other.a4b58253.svg\";","import ButtonsGender from 'components/ButtonsGender';\r\nimport React from 'react';\r\nimport useForm from 'service/useForm';\r\nimport validate from 'service/validation';\r\nimport maleImage from './images/male.svg';\r\nimport femaleImage from './images/female.svg';\r\nimport otherImage from './images/other.svg';\r\nimport './SignUp.scss';\r\n\r\nconst SignUp = ({ submitForm }) => {\r\n  const { handleChange, handleSubmit, values, errors } = useForm(\r\n    submitForm,\r\n    validate,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"Heading\">Sign Up with email</h1>\r\n      <form className=\"Form\" noValidate onSubmit={handleSubmit}>\r\n        <label className=\"Label\">Gender</label>\r\n\r\n        {/* <ButtonsGender onClick={handleChange} /> */}\r\n\r\n        <div className=\"ListRow\">\r\n          <label\r\n            className=\"GenderLabel\"\r\n            style={{\r\n              borderColor: !values.gender\r\n                ? 'grey'\r\n                : values.gender === 'male'\r\n                ? 'green'\r\n                : 'grey',\r\n            }}\r\n          >\r\n            <img src={maleImage} alt=\"Male\" className=\"ImageGender\"></img>\r\n            Male\r\n            <input\r\n              className=\"GenderInput\"\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"male\"\r\n              onChange={handleChange}\r\n            ></input>\r\n          </label>\r\n          <label\r\n            className=\"GenderLabel\"\r\n            style={{\r\n              borderColor: !values.gender\r\n                ? 'grey'\r\n                : values.gender === 'female'\r\n                ? 'green'\r\n                : 'grey',\r\n            }}\r\n          >\r\n            <img src={femaleImage} alt=\"female\" className=\"ImageGender\"></img>\r\n            Female\r\n            <input\r\n              className=\"GenderInput\"\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"female\"\r\n              onChange={handleChange}\r\n            ></input>\r\n          </label>\r\n\r\n          <label\r\n            className=\"GenderLabel\"\r\n            style={{\r\n              borderColor: !values.gender\r\n                ? 'grey'\r\n                : values.gender === 'other'\r\n                ? 'green'\r\n                : 'grey',\r\n            }}\r\n          >\r\n            <img src={otherImage} alt=\"Other\" className=\"ImageGender\"></img>\r\n            Other\r\n            <input\r\n              className=\"GenderInput\"\r\n              type=\"radio\"\r\n              name=\"gender\"\r\n              value=\"other\"\r\n              onChange={handleChange}\r\n            ></input>\r\n          </label>\r\n        </div>\r\n        {errors.gender && <p>{errors.gender}</p>}\r\n\r\n        <label className=\"Label\">E-mail</label>\r\n        <input\r\n          style={{\r\n            borderColor: !values.email\r\n              ? 'grey'\r\n              : !errors.email\r\n              ? 'green'\r\n              : 'red',\r\n          }}\r\n          className=\"Input\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          required\r\n          placeholder=\"Enter your email\"\r\n        ></input>\r\n        {errors.email && <p>{errors.email}</p>}\r\n\r\n        <label className=\"Label\">Create Password</label>\r\n\r\n        <input\r\n          style={{\r\n            borderColor: !values.password1\r\n              ? 'grey'\r\n              : !errors.password1\r\n              ? 'green'\r\n              : 'red',\r\n          }}\r\n          required\r\n          className=\"Input\"\r\n          type=\"password\"\r\n          name=\"password1\"\r\n          value={values.password1}\r\n          onChange={handleChange}\r\n          placeholder=\"Enter your password\"\r\n        ></input>\r\n        {errors.password1 && <p>{errors.password1}</p>}\r\n\r\n        <label className=\"Label\">Confirm Password</label>\r\n        <input\r\n          style={{\r\n            borderColor: !values.password2\r\n              ? 'grey'\r\n              : !errors.password2\r\n              ? 'green'\r\n              : 'red',\r\n          }}\r\n          required\r\n          className=\"Input\"\r\n          type=\"password\"\r\n          name=\"password2\"\r\n          value={values.password2}\r\n          onChange={handleChange}\r\n          placeholder=\"Confirm your password\"\r\n        ></input>\r\n        {errors.password2 && <p>{errors.password2}</p>}\r\n\r\n        <button type=\"submit\" className=\"SignUpBtn\">\r\n          Sign Up\r\n        </button>\r\n        <div className=\"SpanContainer\">\r\n          <span className=\"Span\">\r\n            Already have an account?{' '}\r\n            <a className=\"Link\" href=\"#\">\r\n              Login\r\n            </a>\r\n          </span>\r\n          <span className=\"Span\">\r\n            Review privacy and disclosures{' '}\r\n            <a className=\"Link\" href=\"#\">\r\n              here\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","export default __webpack_public_path__ + \"static/media/logo.51e49696.svg\";","import Container from 'components/Container';\r\nimport React from 'react';\r\nimport './SuccessForm.scss';\r\n\r\nconst SuccessForm = () => {\r\n  return (\r\n    <Container>\r\n      <h2>Congratulations, you have successfully registered!</h2>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SuccessForm;\r\n","import React, { useState } from 'react';\r\nimport './Form.scss';\r\nimport SignUp from 'components/SingUp/SignUp';\r\nimport logo from '../../images/logo.svg';\r\nimport SuccessForm from 'components/SuccessForm';\r\n\r\nconst Form = () => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  function submitForm() {\r\n    setIsSubmitted(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"FormContainer\">\r\n        <img src={logo} alt=\"logo\" className=\"Logo\"></img>\r\n        {!isSubmitted ? <SignUp submitForm={submitForm} /> : <SuccessForm />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Container from './Container';\r\nimport Form from './Form';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}